generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model Post {
  id            String    @id @default(uuid())
  slug          String    @unique
  tag           String
  title         String
  subTitle      String
  isSaved       Boolean   @default(false)
  coverImageSrc String
  createdAt     DateTime  @default(now())
  modifiedAt    DateTime  @updatedAt
  authorId      String
  author        User      @relation("userPosts", fields: [authorId], references: [id])
  likes         Like[]    @relation("postLikes")
  comments      Comment[] @relation("postComments")
  bookmarks     Bookmark[] @relation("postBookmarks")
}

model Like {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  modifiedAt DateTime @updatedAt
  userId    String
  postId    String
  user      User     @relation("userLikes", fields: [userId], references: [id])
  post      Post     @relation("postLikes", fields: [postId], references: [id])
}


model Comment {
  id        String   @id @default(uuid())
  content   String
  userId    String
  postId    String
  createdAt DateTime @default(now())
  modifiedAt DateTime @updatedAt
  user      User     @relation("userComments", fields: [userId], references: [id])
  post      Post     @relation("postComments", fields: [postId], references: [id])
}

model Bookmark {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  modifiedAt DateTime @updatedAt
  userId    String
  postId    String
  user      User     @relation("userBookmarks", fields: [userId], references: [id])
  post      Post     @relation("postBookmarks", fields: [postId], references: [id])
}



// model User {
//   id        String     @id @default(uuid())
//   createdAt DateTime   @default(now())
//   posts     Post[]     @relation("userPosts")  
//   likes     Like[]     @relation("userLikes")  
//   comments  Comment[]  @relation("userComments")
//   bookmarks Bookmark[] @relation("userBookmarks")
// }

model EmailAddress {
  id                     String       @id
  emailAddress           String       @map("email_address")
  verificationStatus     String       @map("verification_status")
  verificationStrategy   String       @map("verification_strategy")
  userId                 String
  user                   User         @relation(fields: [userId], references: [id])

  @@map("email_addresses")
}

model Web3Wallet {
  id                     String       @id
  userId                 String
  user                   User         @relation(fields: [userId], references: [id])

  @@map("web3_wallets")
}

model PhoneNumber {
  id                     String       @id
  number                 String?
  userId                 String
  user                   User         @relation(fields: [userId], references: [id])

  @@map("phone_numbers")
}

model ExternalAccount {
  id                     String       @id
  userId                 String
  user                   User         @relation(fields: [userId], references: [id])

  @@map("external_accounts")
}




model User {
  id                     String       @id
  firstName              String?      @map("first_name")
  lastName               String?      @map("last_name")
  username               String       @map("username")
  birthday               String?      @map("birthday") 
  externalId             String?      @map("external_id")
  gender                 String?      @map("gender")
  imageUrl               String       @map("image_url")
  lastSignInAt           BigInt?      @map("last_sign_in_at")
  passwordEnabled        Boolean      @map("password_enabled")
  primaryEmailAddressId  String?      @map("primary_email_address_id")
  primaryPhoneNumberId   String?      @map("primary_phone_number_id")
  primaryWeb3WalletId    String?      @map("primary_web3_wallet_id")
  profileImageUrl        String       @map("profile_image_url")
  twoFactorEnabled       Boolean      @map("two_factor_enabled")
  updatedAt              BigInt       @map("updated_at")
  createdAt              BigInt       @map("created_at")
  privateMetadata        Json         @map("private_metadata")
  publicMetadata         Json         @map("public_metadata")
  unsafeMetadata         Json         @map("unsafe_metadata")
  emailAddresses         EmailAddress[]
  web3Wallets            Web3Wallet[]
  phoneNumbers           PhoneNumber[]
  externalAccounts       ExternalAccount[]
  posts                  Post[]       @relation("userPosts")
  likes                  Like[]       @relation("userLikes")
  comments               Comment[]    @relation("userComments")
  bookmarks              Bookmark[]   @relation("userBookmarks")

  @@map("users")
}

